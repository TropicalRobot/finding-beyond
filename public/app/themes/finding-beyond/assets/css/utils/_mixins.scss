/*
 * Media queries
*/

// _mixins.scss
@mixin respond-to($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (min-width: #{map-get($grid-breakpoints, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints` map.";
  }
}

/*
 * Font
 */

@function calculateRem($size) {
  $remSize: $size / $font-size-base;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


@mixin text-shadow() {
    text-shadow: 0 2px 4px rgba(black, 0.5);
}

/*
 * Links
 */

/*
 * Links
 */

@mixin link-underline($color: white) {
    position: relative;
    display: inline-block;
    text-decoration: none;
    color: $color;
    &:after {
        content: '';
        width: 100%;
        position: absolute;
        bottom: 1px;
        left: 0;
        border-bottom: 1px solid $color;
        transition: all 0.15s;
    }
    &:hover {
        color: $color;
        text-decoration: none;
        &:after {
            width: 0;
        }
    }
}


@mixin link-underline-reveal($color: white) {
    @include link-underline($color);
    &:after {
        width: 0;
    }
    &:hover {
        &:after {
            width: 100%;
        }
    }
}

@mixin link-bg--reveal-down($color: white) {
    position: relative;
    display: flex;
    justify-content: center;
    &:after {
        content: '';
        width: 100%;
        position: absolute;
        transition: all 0.15s;
        left: 0;
        top: 0;
        height: 0;
        background-color: $color;
    }
    &:hover, &.current-menu-item {
        &:after {
            height: 100%;
        }
    }
}

@mixin link-bg--reveal-up($color: white) {
    position: relative;
    display: flex;
    justify-content: center;
    &:after {
        content: '';
        width: 100%;
        position: absolute;
        transition: all 0.15s;
        left: 0;
        bottom: 0;
        height: 0;
        background-color: $color;
    }
    &:hover, &.current-menu-item {
        &:after {
            height: 100%;
        }
    }
}

@mixin link-hover-grow {
    transition: transform 0.15s;
    &:hover {
        transform: scale3d(1.2,1.2,1.2);
    }
}

@mixin font-hover-grow($fontSize) {
    @include font-size($fontSize);
    transition: font-size 0.15s;
    &:hover {
        @include font-size($fontSize * 1.2);
    }
}

@mixin link-clean {
    text-decoration: none;
    color: inherit;
    &:hover, &:active, &:focus {
        color: inherit;
        text-decoration: none;
    }
}

@mixin link-color-clean($color, $hoverColor: null) {
    text-decoration: none;
    color: $color;
    transition: all 0.2s;
    &:hover, &:active, &:focus {
        @if $hoverColor != null {
            color: $hoverColor
        } @else {
            color: darken($color, 10%);
        }
        text-decoration: none;
    }
}

@mixin link-color($color) {
    color: $color;
    transition: all 0.2s;
    &:hover, &:active, &:focus {
        color: darken($color, 10%);
    }
}

@mixin absolute-fill {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
}

@mixin list-unstyled {
    list-style-type: none;
    padding-left: 0;
    margin-bottom: 0;
}

@mixin gradient($color) {
    @if ($color == 'secondary') {
        background: -moz-linear-gradient(left,  palette('verdunGreen') 0%, palette('apple') 100%); /* FF3.6-15 */
        background: -webkit-linear-gradient(left,  palette('verdunGreen') 0%,palette('apple') 100%); /* Chrome10-25,Safari5.1-6 */
        background: linear-gradient(to right,  palette('verdunGreen') 0%,palette('apple') 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    } @else {
        background: -moz-linear-gradient(left,  palette('deepCerulean') 0%, palette('cerulean') 100%); /* FF3.6-15 */
        background: -webkit-linear-gradient(left,  palette('deepCerulean') 0%,palette('cerulean') 100%); /* Chrome10-25,Safari5.1-6 */
        background: linear-gradient(to right,  palette('deepCerulean') 0%,palette('cerulean') 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    }
}

/*
 * Media queries
 */

@mixin media-sm {
    @media (min-width: grid-breakpoints('sm')) {
        @content;
    }
}

@mixin media-md {
    @media (min-width: grid-breakpoints('md')) {
        @content;
    }
}

@mixin media-lg {
    @media (min-width: grid-breakpoints('lg')) {
        @content;
    }
}

@mixin media-xl {
    @media (min-width: grid-breakpoints('xl')) {
        @content;
    }
}

@mixin media-sm-max {
    @media (max-width: grid-breakpoints('sm') - 1) {
        @content;
    }
}

@mixin media-md-max {
    @media (max-width: grid-breakpoints('md') - 1) {
        @content;
    }
}

@mixin media-lg-max {
    @media (max-width: grid-breakpoints('lg') - 1) {
        @content;
    }
}

@mixin media-mob-menu {
    @media (min-width: grid-breakpoints('lg')) {
        @content;
    }
}

@mixin media-mob-menu-max {
    @media (max-width: grid-breakpoints('lg') - 1) {
        @content;
    }
}

